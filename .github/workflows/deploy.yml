name: Deploy to EC2

on:
    push:
        branches:
            - prod

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Cache Docker layers
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Build and start services
              run: |
                  docker buildx create --use
                  docker compose -f docker-compose.yml build \
                    --progress plain \
                    --cache-from=type=local,src=/tmp/.buildx-cache \
                    --cache-to=type=local,dest=/tmp/.buildx-cache-new

                  docker compose -f docker-compose.yml up -d

            - name: Save new cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache

            - name: Set up .env.ci
              run: |
                  cat <<EOF > .env.ci
                  APP_ENV=testing
                  APP_DEBUG=true
                  APP_KEY=base64:$(openssl rand -base64 32)
                  DB_CONNECTION=mysql
                  DB_HOST=mysql
                  DB_PORT=3306
                  DB_DATABASE=testing
                  DB_USERNAME=root
                  DB_PASSWORD=secret
                  EOF

            - name: Build and start services
              run: docker compose -f docker-compose.yml up -d --build

            - name: Copy .env.ci into app container as .env
              run: |
                  docker cp .env.ci $(docker compose ps -q app):/var/www/html/.env

            - name: Run migrations
              run: docker compose exec -T app php artisan migrate:fresh --seed --force

            - name: Run Laravel tests
              run: docker compose exec -T app php artisan test

            - name: Shut down containers
              run: docker compose down

    deploy:
        needs: test
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Deploy over SSH
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USER }}
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      set -e
                      cd /var/www/spotacus
                      git fetch origin
                      git reset --hard origin/prod

                      docker compose down --remove-orphans
                      docker compose up -d --build

                      chmod +x scripts/post_deploy.sh
                      ./scripts/post_deploy.sh
