name: CI/CD Pipeline

on:
    push:
        branches: [prod]
    workflow_dispatch:

concurrency:
    group: prod
    cancel-in-progress: true

permissions:
    contents: read
    packages: write

env:
    REGISTRY: ghcr.io
    TAG: ${{ github.sha }}

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            tag: ${{ steps.meta.outputs.tag }}
        steps:
            - uses: actions/checkout@v4

            - uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - uses: docker/setup-buildx-action@v3

            # centralize metadata/tags
            - id: meta
              run: echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

            # normalize image name to lowercase and expose as output + env
            - id: normalize
              shell: bash
              run: |
                  IMAGE_LC="${REGISTRY}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
                  echo "image=${IMAGE_LC}" >> "$GITHUB_OUTPUT"
                  echo "IMAGE=${IMAGE_LC}" >> "$GITHUB_ENV"

            # Build image for testing (load locally, don't push)
            - uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  load: true
                  push: false
                  tags: |
                      ${{ steps.normalize.outputs.image }}:${{ steps.meta.outputs.tag }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    test:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4

            - name: Compose up (CI)
              run: docker compose -f docker/ci/docker-compose.ci.yml up -d --build --wait

            - name: Migrate fresh + seed
              run: docker compose -f docker/ci/docker-compose.ci.yml exec -T app php artisan migrate:fresh --seed --force

            - name: PHPUnit
              run: docker compose -f docker/ci/docker-compose.ci.yml exec -T app php artisan test

            - name: Tear down
              if: always()
              run: docker compose -f docker/ci/docker-compose.ci.yml down -v

    push_image:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v4

            - uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - uses: docker/setup-buildx-action@v3

            # normalize again (env/outputs don't cross jobs)
            - id: normalize
              shell: bash
              run: |
                  IMAGE_LC="${REGISTRY}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
                  echo "image=${IMAGE_LC}" >> "$GITHUB_OUTPUT"
                  echo "IMAGE=${IMAGE_LC}" >> "$GITHUB_ENV"

            # Rebuild (cached) and push immutable + rolling tags
            - uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: |
                      ${{ steps.normalize.outputs.image }}:${{ env.TAG }}
                      ${{ steps.normalize.outputs.image }}:prod-latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    deploy:
        runs-on: ubuntu-latest
        needs: push_image
        environment:
            name: production
            url: https://spotacus.app
        steps:
            - uses: actions/checkout@v4

            - name: Prepare known_hosts (EC2)
              run: |
                  mkdir -p ~/.ssh && chmod 700 ~/.ssh
                  echo "${{ secrets.EC2_HOST_KEY }}" >> ~/.ssh/known_hosts
                  chmod 644 ~/.ssh/known_hosts

            - name: Deploy via SSH
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USER }}
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      set -euo pipefail
                      cd /var/www/spotacus

                      echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin || true

                      git fetch origin
                      git reset --hard origin/prod

                      docker compose -f docker/compose.prod.yml pull
                      docker compose -f docker/compose.prod.yml up -d --remove-orphans

                      chmod +x deploy/post_deploy.sh
                      ./deploy/post_deploy.sh
