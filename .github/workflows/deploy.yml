name: CI/CD Pipeline

on:
    push:
        branches: [prod]

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Check if .env.ci exists
              run: |
                  if [ -f docker/ci/.env.ci ]; then
                    echo ".env.ci exists ✅"
                    cat docker/ci/.env.ci
                    exit 0
                  else
                    echo "❌ .env.ci is missing!"
                    exit 1
                  fi

            - name: Build and start services
              run: docker compose -f docker/ci/docker-compose.ci.yml up -d --build
              working-directory: ${{ github.workspace }}

            - name: Check if .env is mounted correctly inside container
              run: |
                  docker compose -f docker/ci/docker-compose.ci.yml exec -T app bash -c "test -f /var/www/html/.env && echo '.env exists ✅' && cat /var/www/html/.env || (echo '❌ .env is missing inside container' && exit 1)"

            - name: Show current working dir in container
              run: docker compose -f docker/ci/docker-compose.ci.yml exec -T app pwd

            - name: Wait for MySQL container to be healthy
              run: |
                  echo "Waiting for MySQL to be healthy..."
                  for i in {1..30}; do
                    STATUS=$(docker inspect --format='{{.State.Health.Status}}' $(docker compose -f docker/ci/docker-compose.ci.yml ps -q mysql))
                    echo "Current status: $STATUS"
                    if [ "$STATUS" == "healthy" ]; then
                      echo "✅ MySQL is healthy"
                      exit 0
                    fi
                    sleep 2
                  done
                  echo "❌ MySQL did not become healthy in time"
                  docker compose -f docker/ci/docker-compose.ci.yml logs mysql
                  exit 1

            - name: Show MySQL logs
              run: docker compose -f docker/ci/docker-compose.ci.yml logs mysql

            - name: Debug Show Laravel .env inside container
              run: docker compose -f docker/ci/docker-compose.ci.yml exec -T app cat /var/www/html/.env

            - name: Run Migrations
              run: docker compose -f docker/ci/docker-compose.ci.yml exec -T app php artisan migrate:fresh --seed --force

            - name: Run PHPUnit Tests
              run: docker compose -f docker/ci/docker-compose.ci.yml exec -T app php artisan test

            - name: Tear Down
              run: docker compose -f docker/ci/docker-compose.ci.yml down

    deploy:
        name: Deploy to Production
        needs: test
        runs-on: ubuntu-latest
        environment:
            name: production
            url: https://spotacus.app
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Deploy via SSH
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USER }}
                  key: ${{ secrets.EC2_SSH_KEY }}
                  script: |
                      set -e
                      cd /var/www/spotacus
                      git fetch origin
                      git reset --hard origin/prod

                      docker compose -f docker/prod/docker-compose.yml down --remove-orphans
                      docker compose -f docker/prod/docker-compose.yml up -d --build

                      chmod +x scripts/post_deploy.sh
                      ./scripts/post_deploy.sh
