# --- HTTP-wide (http context) ---
limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;

gzip on;
gzip_vary on;
gzip_types
    text/plain text/css application/json application/javascript
    application/rss+xml application/xml image/svg+xml
    font/ttf font/otf font/woff font/woff2;
gzip_min_length 1024;

# --------------------------
# HTTP (80): ACME + redirect
# --------------------------
server {
    listen 80;
    server_name spotacus.app www.spotacus.app;

    # ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
        try_files $uri =404;
    }

    # Simple container health (pre-TLS)
    location = /health {
        return 200 "ok";
        add_header Content-Type text/plain;
    }

    # Everything else -> HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# --------------------------
# HTTPS (443): main site
# --------------------------
server {
    listen 443 ssl;
    http2 on;
    server_name spotacus.app www.spotacus.app;

    # Certs
    ssl_certificate     /etc/letsencrypt/live/spotacus.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/spotacus.app/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/spotacus.app/chain.pem;

    # TLS
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:HIGH:!aNULL:!MD5';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;
    resolver 1.1.1.1 1.0.0.1 valid=300s ipv6=off;
    resolver_timeout 5s;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), microphone=(), payment=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Basic server settings
    client_max_body_size 10m;
    sendfile on;
    keepalive_timeout 65;

    # Root + indexes
    root /var/www/html/public;
    index index.php index.html;

    # Cache hashed build assets
    location ^~ /build/ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }

    # Public storage files
    location ^~ /storage/ {
        try_files $uri =404;
        access_log off;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }

    # Main app: single prefix location (merged)
    location / {
        limit_req zone=one burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP handling
    location ~ \.php$ {
        include fastcgi.conf;      # sets SCRIPT_FILENAME using $document_root
        fastcgi_pass app:9000;     # php-fpm in "app" service
        fastcgi_index index.php;

        # Optional hardening & perf
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 60s;
    }

    # Hide dotfiles except ACME
    location ~ /\.(?!well-known) {
        deny all;
    }

    # ACME on HTTPS (harmless)
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
        try_files $uri =404;
    }
}
